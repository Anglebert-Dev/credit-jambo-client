name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: credit_jambo_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      
      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: backend/package-lock.json
      
      - name: Install dependencies
        working-directory: backend
        run: npm ci
      
      - name: Generate Prisma Client
        working-directory: backend
        run: npx prisma generate
      
      - name: Run database migrations
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:testpass@localhost:5432/credit_jambo_test
          JWT_ACCESS_SECRET: test_secret
          JWT_REFRESH_SECRET: test_refresh_secret
          REDIS_URL: redis://localhost:6379
        run: npx prisma migrate dev --name init
      
      - name: Run tests
        working-directory: backend
        env:
          DATABASE_URL: postgresql://postgres:testpass@localhost:5432/credit_jambo_test
          JWT_ACCESS_SECRET: test_secret
          JWT_REFRESH_SECRET: test_refresh_secret
          REDIS_URL: redis://localhost:6379
        run: npm test
      
      - name: Build
        working-directory: backend
        run: npm run build
      
      - name: Lint
        working-directory: backend
        run: npm run lint || true

